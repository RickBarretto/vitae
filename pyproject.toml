[tool.poetry]
name = "vitae"
version = "0.1.0"
description = ""
authors = ["Author <author@example.com>"]
readme = "README.md"

packages = [
    { include = "vitae" }
]


[tool.poetry.scripts]
vitae = "vitae.__main__:cli"
pre-process = "scripts.preprocess:cli"
clear-cache = "scripts.clear:cache"
clear-log = "scripts.clear:log"

[tool.poetry.dependencies]
python = "^3.12"
psycopg = {extras = ["binary"], version = "^3.2.7"}
loguru = "^0.7.3"
pytest = "^8.3.5"
sqlmodel = "^0.0.24"
cyclopts = "^3.19.0"
pytest-cov = "^6.2.1"
fastapi = "^0.116.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.11.8"
ty = "^0.0.1a5"

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "integration",
]
python_files = ["*test_*.py", "*_spec", "*_case", "*_usecase"]
python_classes = ["Test*", "Suite*", "Spec*", "Describe*"]
python_functions = ["test_*", "should_*", "it_*", "its_*", "has_*", "is_*", "have_*", "are_*", "when_*", "and_"]
console_output_style = "progress"

[tool.coverage.run]
omit = [
    "tests/*",
    "*/tests/*",
    "*/test_*.py",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
